#./ansible.cfg
[defaults]
inventory = inventory/
roles_path = roles/


--------------------------------------------------
#./output.txt



--------------------------------------------------
#./group_vars/all.yml
openvpn_port: 1194
openvpn_protocol: udp
vpn_network: "10.8.0.0"
vpn_netmask: "255.255.255.0"


--------------------------------------------------
#./roles/firewall/tasks/main.yml
---
- name: UFW Configuration
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: "{{ 'udp' if item == openvpn_port else 'tcp' }}"
  with_items:
    - "{{ openvpn_port }}"
    - 22  # SSH

- name: IP Forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: yes

- name: NAT Configuration
  iptables:
    table: nat
    chain: POSTROUTING
    out_interface: eth0
    jump: MASQUERADE
    source: "{{ vpn_network }}/24"


--------------------------------------------------
#./roles/openvpn/tasks/main.yml
---
- name: OpenVPN installation
  apt:
    name: openvpn
    state: present

- name: OpenVPN configuration directory
  file:
    path: /etc/openvpn/keys
    state: directory
    mode: '0700'

- name: Download Easy-RSA
  get_url:
    url: https://github.com/OpenVPN/easy-rsa/releases/download/v3.1.7/EasyRSA-3.1.7.tgz
    dest: /etc/openvpn/easy-rsa.tar.gz
    mode: '0700'

- name: Extract Easy-RSA
  unarchive:
    src: /etc/openvpn/easy-rsa.tar.gz
    dest: /etc/openvpn/
    remote_src: yes

- name: Rename EasyRSA directory
  command: mv /etc/openvpn/EasyRSA-3.1.7 /etc/openvpn/easy-rsa
  args:
    creates: /etc/openvpn/easy-rsa

- name: Copy vars file
  command: cp /etc/openvpn/easy-rsa/vars.example /etc/openvpn/easy-rsa/vars
  args:
    creates: /etc/openvpn/easy-rsa/vars

- name: Initialize PKI
  command: ./easyrsa init-pki
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki

- name: Build CA
  command: ./easyrsa --batch build-ca nopass
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/ca.crt

- name: Generate server key
  command: ./easyrsa --batch build-server-full server nopass
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/issued/server.crt

- name: Generate Diffie-Hellman key
  command: ./easyrsa gen-dh
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/dh.pem

- name: Copy certificates to OpenVPN directory
  copy:
    src: "/etc/openvpn/easy-rsa/pki/{{ item.src }}"
    dest: "/etc/openvpn/keys/{{ item.dest }}"
    remote_src: yes
  with_items:
    - { src: 'ca.crt', dest: 'ca.crt' }
    - { src: 'issued/server.crt', dest: 'server.crt' }
    - { src: 'private/server.key', dest: 'server.key' }
    - { src: 'dh.pem', dest: 'dh2048.pem' }

- name: OpenVPN Configuration
  template:
    src: server.conf.j2
    dest: /etc/openvpn/server.conf
    mode: '0644'
  notify: restart openvpn


--------------------------------------------------
#./roles/openvpn/templates/server.conf.j2
port {{ openvpn_port }}
proto {{ openvpn_protocol }}
dev tun
ca /etc/openvpn/keys/ca.crt
cert /etc/openvpn/keys/server.crt
key /etc/openvpn/keys/server.key
dh /etc/openvpn/keys/dh2048.pem
server {{ vpn_network }} {{ vpn_netmask }}
push "redirect-gateway def1"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
cipher AES-256-CBC
auth SHA256
user nobody
group nogroup
persist-key
persist-tun
status /var/log/openvpn/openvpn-status.log
verb 3


--------------------------------------------------
#./roles/openvpn/handlers/main.yml
---
- name: restart openvpn
  service:
    name: openvpn
    state: restarted


--------------------------------------------------
#./roles/system_hardening/tasks/main.yml
---
- name: System upgrade
  apt:
    update_cache: yes
    upgrade: full
    
- name: Install fail2ban, ufw and unattended-upgrades
  apt:
    name:
      - fail2ban
      - ufw
      - unattended-upgrades
    state: present

- name: Configure fail2ban
  template:
    src: 20auto-upgrades.j2
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    mode: '0644'

- name: SSH hardening
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    mode: '0600'
  notify: restart ssh


--------------------------------------------------
#./roles/system_hardening/templates/20auto-upgrades.j2
APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Unattended-Upgrade "1";


--------------------------------------------------
#./roles/system_hardening/templates/sshd_config.j2
Port 22
Protocol 2
PermitRootLogin no
PasswordAuthentication no
PubkeyAuthentication yes
PermitEmptyPasswords no
X11Forwarding no
MaxAuthTries 3


--------------------------------------------------
#./roles/system_hardening/handlers/main.yml
---
- name: restart ssh
  service:
    name: sshd
    state: restarted


--------------------------------------------------
#./playbooks/main.yml
---
- name: Install and configure OpenVPN server
  hosts: vpn_server
  become: yes
  vars_files:
    - ../group_vars/all.yml
  roles:
    - ../roles/system_hardening
    - ../roles/openvpn
    - ../roles/firewall


--------------------------------------------------
#./inventory/hosts.yml
all:
  hosts:
    vpn_server:
      ansible_host: "18.198.189.217"  # Public IP of the VPN server
      ansible_user: ubuntu
      ansible_ssh_private_key_file: "~/.ssh/vpn-key"


--------------------------------------------------
